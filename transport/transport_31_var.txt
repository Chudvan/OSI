T_INIT.REQ

integer declare addr
integer declare state
integer declare con_timer
integer declare con_try
integer declare con_limit
integer declare discon_timer
integer declare discon_try
integer declare discon_limit
integer declare state_1_timer
integer declare delay_timer
integer declare delay_time
integer declare send_package_timer
integer declare right_now
integer declare last_received
integer declare last_sent
integer declare calcCrc
integer declare packageNumber
integer declare packageType
integer declare packageCrc
buffer declare packageBuffer 
buffer declare packageConInd
buffer declare packageConConf 
buffer declare packageDConReq 
buffer declare packageDConResp 
queue declare packageQueue
integer declare packageAddr
buffer declare data 

0 setto con_try
0 setto discon_try
1 setto state
3 setto con_limit
3 setto discon_limit
20 setto delay_time
1 setto right_now
0 setto last_received
0 setto last_sent
0 setto packageNumber

;Типы пакетов

;packageConInd пакет для соединения (N_CONNECT.REQ) (packageType==1)
packageBuffer pack 1 1 1
varcrc packageCrc $packageBuffer 
packageConInd pack $packageCrc 1 $packageBuffer sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)
;packageConConf пакет для соединения (N_CONNECT.RESP) (packageType==2)
packageBuffer pack 2 1 1
varcrc packageCrc $packageBuffer 
packageConConf pack $packageCrc 1 $packageBuffer sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)
;packageDConReq пакет N_DATA.REQ(дисконнект) (packageType==3)
packageBuffer pack 3 1 1
varcrc packageCrc $packageBuffer 
packageDConReq pack $packageCrc 1 $packageBuffer sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)
;packageDConResp пакет для дисконнекта (N_DISCONNECT.REQ) (packageType==5)
packageBuffer pack 5 1 1
varcrc packageCrc $packageBuffer 
packageDConResp pack $packageCrc 1 $packageBuffer sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)

---

N_DATAGRAM.IND

;параметры:  address (число), userdata (буфер)
;Распаковываем и проверяем CRC
userdata unbufferit  packageCrc 1 packageBuffer (sizeof(userdata) - 1) 
varcrc calcCrc $packageBuffer 
($calcCrc != $packageCrc) if Сorrupted
;Вычленяем packageType
packageBuffer unbufferit  packageType 1 
out "T " CurrentSystemName() ": N_DATAGRAM.IND " $packageType " " $state
($packageType == 1) if ConInd
($packageType == 2) && ($state == 2) if ConConf
($packageType == 3) if DConReq
($packageType == 4) && ($state < 8) if DataInd
($packageType == 5) && ($state != 1) if DConResp
goto Exit

Сorrupted:
	goto Exit

ConInd:
	($state == 1) if ConInd1
	($state == 6) if ConInd6
	goto Exit
	ConInd1:
		5 setto state
		sendup address $address T_CONNECT.IND
		$address setto addr
		goto Exit
	ConInd6:
		;Шлём пакет для соединения (N_CONNECT.RESP) (packageType==2)
		timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageConConf
		timeevent DELAYTIMER delay_timer 10
		goto Exit

ConConf:
	3 setto state
	sendup address $address T_CONNECT.CONF
	untimer $con_timer
	goto Exit

DConReq:
	($state == 10) if DConReq10
	($state == 1) if Exit
	;else
		10 setto state
		sendup T_DISCONNECT.IND ; дальше - DConReq10
	DConReq10:
		;Шлём пакет для дисконнекта (packageType==5)
		timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageDConResp
		untimer $state_1_timer		
		timeevent TIMER_STATE_1 state_1_timer 10		
		goto Exit

DConResp:
	9 setto state
	timeevent TIMER_STATE_1 state_1_timer $right_now
	untimer $discon_timer
	goto Exit

DataInd:
	7 setto state
	;Вычленяем тип, № пакета и данные
	packageBuffer unbufferit  packageType 1 packageNumber 1 data (sizeof(packageBuffer) - 2)
	;Проверяем номер принятого пакета
	($packageNumber <= $last_received) if dublicate
	$packageNumber setto last_received
	sendup userdata $data T_DATA.IND
	goto Exit
	dublicate:
		goto Exit

Exit:

---

T_CONNECT.REQ

;параметры:  address (число)
2 setto state
1 setto con_try
;Шлем пакет для соединения (N_CONNECT.REQ) (packageType==1)
timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageConInd
timeevent DELAYTIMER delay_timer 10
;Сохраняем адрес и устанавливаем таймер
$address setto addr
timeevent CONTIMER con_timer (2 * $delay_time + 1) address $address

---

T_CONNECT.RESP

;параметры:  address (число)
6 setto state
;Шлём пакет для соединения (N_CONNECT.RESP) (packageType==2)
timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageConConf
timeevent DELAYTIMER delay_timer 10

---

T_DATA.REQ

;параметры:   userdata (буфер)
4 setto state
; увеличиваем номер исходящего пакета
($last_sent + 1) setto last_sent
; формируем исходящий БДП
packageBuffer pack 4 1 $last_sent 1 $userdata sizeof(userdata) (sizeof(userdata) + 2)
varcrc packageCrc $packageBuffer 
packageBuffer pack $packageCrc 1 $packageBuffer sizeof(packageBuffer) (sizeof(userdata) + 3)

if (qcount(packageQueue) == 0) && ($delay_timer == 0) send
putInQueue:
	packageBuffer pack $addr 1 $packageBuffer sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)
	queue $packageBuffer packageQueue
	goto Exit
send:
	;Шлём его
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $addr userdata $packageBuffer
	timeevent DELAYTIMER delay_timer 10
Exit:

---

T_DISCONNECT.REQ

;параметры:  address (число)
8 setto state
untimer $discon_timer
if (qcount(packageQueue) == 0) && ($delay_timer == 0) disconnect
putInQueue:
	;ОТЛОЖЕННЫЙ пакет N_DATA.REQ(дисконнект) (packageType==3) В ОЧЕРЕДЬ
	packageBuffer pack $address 1 $packageDConReq sizeof(packageBuffer)  (sizeof(packageBuffer) + 1)
	queue $packageBuffer packageQueue
	goto Exit
disconnect:
	;Шлём пакет N_DATA.REQ(дисконнект) (packageType==3)
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageDConReq
	timeevent REDISCONNECT discon_timer (2 * $delay_time + 1) address $address

Exit:

---

CONTIMER

; увеличиваем количество попыток соединения

out "T " CurrentSystemName() "CONTIMER"

$con_try + 1 setto con_try
; попытки соединения кончились?
$con_try > $con_limit if over
;state2:
	;Шлем пакет для соединения (N_CONNECT.REQ) (packageType==1)
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageConInd
	timeevent DELAYTIMER delay_timer 10

	;Устанавливаем таймер
	timeevent CONTIMER con_timer (2 * $delay_time + 1) address $address
	goto Exit

over:
	11 setto state
	timeevent TIMER_STATE_1 state_1_timer ($right_now+1)
	;Шлем пакет N_DATA.REQ(дисконнект) (packageType==3)
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageDConReq
	timeevent DELAYTIMER delay_timer 10
	; Оповещаем сеансовый уровень о дисконнекте
	sendup T_DISCONNECT.IND

Exit:

---

DELAYTIMER

0 setto delay_timer
if qcount(packageQueue) == 0 Exit
send:
	dequeue(packageQueue) setto packageBuffer
	packageBuffer unbufferit  packageAddr 1 packageBuffer (sizeof(packageBuffer) - 1) 
	packageBuffer unbufferit  packageCrc 1 packageType 1 
	out "T " CurrentSystemName() ": DELAYTIMER: send: " $packageType
	if ($packageType == 3) if disconnect
	;else
		timeevent SENDPACKAGETIMER send_package_timer $right_now address $packageAddr userdata $packageBuffer
		timeevent DELAYTIMER delay_timer 10
		goto Exit
	disconnect:
		timeevent SENDPACKAGETIMER send_package_timer $right_now address $packageAddr userdata $packageBuffer
		timeevent REDISCONNECT discon_timer (2 * $delay_time + 1) address $packageAddr 
		clearqueue packageQueue
Exit:

---

REDISCONNECT

out "T " CurrentSystemName() ": REDIS"
; увеличиваем количество попыток дисконнекта
$discon_try + 1 setto discon_try
; попытки разъединения  кончились?
$discon_try > $discon_limit if over
;state8:
	;Шлём пакет N_DATA.REQ(дисконнект) (packageType==3)
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageDConReq
	timeevent REDISCONNECT discon_timer (2 * $delay_time + 1) address $address
	goto Exit
over:
	;Шлём пакет для дисконнекта (N_DISCONNECT.REQ) (packageType==5)
	timeevent SENDPACKAGETIMER send_package_timer $right_now address $address userdata $packageDConResp
	untimer $discon_timer
	timeevent TIMER_STATE_1 state_1_timer ($right_now+1)

Exit:

---

SENDPACKAGETIMER

;параметры:  address (число), userdata (буфер)

address $address userdata $userdata eventdown N_DATAGRAM.REQ
address $address userdata $userdata eventdown N_DATAGRAM.REQ
address $address userdata $userdata eventdown N_DATAGRAM.REQ

---

TIMER_STATE_1

out "T " CurrentSystemName() "TIMER_STATE_1"

0 setto con_try
0 setto discon_try
1 setto state
0 setto last_received
0 setto last_sent
0 setto packageNumber